// Setup realtime layer 
aktos-dcs 

// Setup global logger
logger

// Setup the router (offset is needed because of the fixed menu)
router(offset="50")

//
    Rest is the Ractive template that you already know.     
    SemanticUI, Pug and Livescript is supported out of the box.
    
- var gh = "https://github.com/aktos-io"
- var sourceAddr = gh + "/scadajs-template"
- var demoAddr = "https://aktos.io/st"
- var scadajsAddr = gh + "/scada.js"
- var issues = sourceAddr + "/issues"

+unless('hideTopMenu')
    .ui.fixed.inverted.menu
        a.inverted.green.item(href="#/") Home 
        a.inverted.green.item(href="#/page2") Page 2
        +if('able("scene.hello.**")')
            a.inverted.orange.item(slide-in-out href="#/hello") Hello
        a.inverted.red.item(href="#/pagefoo") Not Exist    
        a.inverted.yellow.item(href="#/hello2") Unauthorized
        a.item(href="#/fullwindow") Full Window

        //- TODO: separate them with a submenu
        include ./showcase/menu.pug 
        
// Include Showcase scenes 
include ./showcase/scenes.pug

scene(name="NOTFOUND")
    .ui.message.red 
        .content.
            No such page can be found. 
            No one created #[b {{@shared.router.scene}}] scene yet.
        
scene(name="UNAUTHORIZED")
    .ui.message.orange
        .content.
            You are not authorized for the page you requested.

scene(default public)
    // sync values with routes 
    sync(value="{{name}}" route="@mydevice.hello.name")
    sync(value="{{x}}" route="@mydevice.hello.there" fps="20")
    sync(value="{{y}}" route="@mydevice.hello.there")
    +if('hasRoute("@mydevice.foo.bar")')
        sync(value="{{z}}" route="@mydevice.foo.bar")

                        
    .ui.container
        .ui.basic.segment 
            .ui.big.message(style="padding: 150px auto")
                h1.ui.big.header ScadaJS Template 
                .ui.p(style="font-size: 1.2em; margin: 2em;").
                    This demo page will achieve its goal if you decide to give #[a(href=scadajsAddr): icon.github ScadaJS]
                    a shot in your next realtime webapp project.
                    
                .ui.p(style="font-size: 1.2em; margin: 2em; font-weight: bold").
                    Writing a webapp should be #[a(href=sourceAddr+'/blob/master/webapps/main') this simple].
                
            .ui.p.
                You can get the source code of this template webapp 
                #[a(href=sourceAddr): icon.github here].
                If you are confused about anything,  
                #[a(href=issues): icon.bug rise an issue].
                
            h3.ui.header This project template answers:
            ol
                li How to propagate the changes between your devices in realtime
                    ol 
                        li Open this page (#[a(href=demoAddr) https://aktos.io/st]) on multiple devices.
                        li See the changes are #[b propagated in realtime].
                li How to manage the authorization: 
                    ol
                        li Login as different users and check out the authorized area.
                        li See the webapp code in order to understand the custom #[code Ractive.able()] helper
                        li See the #[code users.ls] to understand how to manage the #[code routes] and #[code permissions].
                li How to manage routing: Use #[code scene] and #[code router] components.

    .ui.container 
        .ui.grid
            .centered.column 
                h1.ui.top.attached.block.header
                    icon.wrench Realtime Changes 
                .ui.bottom.attached.raised.segment
                    h2.ui.header Hello {{name}}!
                    .ui.input: input(value="{{name}}")

                    h3 Slider (@mydevice.hello.there) @20fps
                    .ui.p Value: {{x}}
                    slider(inline value="{{x}}")
                    progress(type="circle" value="{{x}}")

                    h3 Separate sync component (sync with @mydevice.hello.there)
                    .ui.p Value: {{y}}
                    
                    time-series(
                        y-format="#.# Â°C" 
                        name="test"
                        current="{{x}}"
                        live)

                    
                anchor authorization
                h1.ui.top.attached.block.header
                    .nowrap 
                        icon.lock Authorization #[a(href="#authorization"): icon.linkify]
                    
                .ui.attached.raised.segment
                    .ui.grid 
                        .eight.wide.column
                            .ui.form 
                                .fields 
                                    .field 
                                        label Username 
                                        input(value="{{username}}")
                                    .field 
                                        label Password 
                                        input(value="{{password}}")
                                .fields
                                    .field 
                                        login-button.green(user="{{username}}" password="{{password}}") Login 
                                        logout-button.red Logout 

                        .eight.wide.column
                            .ui.message 
                                ul
                                    li Logged in as #[.ui.large.orange.label {{@global.session.user}}]
                                    li Available Routes:
                                        ul 
                                            +each('@global.session.routes as route')
                                                li {{route}}
                                    li Available Permissions: 
                                        ul 
                                            +each('@global.session.permissions as permission')
                                                li {{permission}}
                            .ui.green.message            
                                .ui.p (use "myuser", "5678")
                                .ui.p (use "hellouser, 1234" to see  #[a(href="#/hello") hello scene]


                                    
                h1.ui.attached.header
                    icon.lock Authorized Area  
                .ui.bottom.attachedraised.segment 
                    +iff('able("slider2.write")')
                        .ui.message.green You are allowed to move the slider. 
                    +else 
                        .ui.message.red You are not allowed to move the slider (you don't have "slider2.write" permission)
                    +endif
                    
                    slider(inline value="{{z}}" disabled="{{unable('slider2.write')}}")
                    
                    .ui.message.red 
                        .ui.p Here is the Hacked slider: 
                        slider(inline value="{{z}}" disabled="false")
    .spacer
        
scene(name="page2" public)
    .ui.p Hello, this is page2!   
    .spacer 
    anchor some-anchor
    h2.ui.header Some anchor #[a(href="#some-anchor"): icon.purple.linkify]
    .ui.p ...
    .ui.p (got to #[a(href="#") top])
    .spacer
    .ui.p some content
    .spacer
    .spacer

scene(name="hello" permissions="scene.hello.**")
    .ui.p.
        This page can only be seen by the users who 
        have the "scene.hello.**" permission, #[span.text.green like you :)]

scene(name="hello2" permissions="scene.hello2.**")
    .ui.p I think no one can see this page.

scene(
    name="fullwindow" 
    offset="0"
    on-enter-exit="@.toggle('hideTopMenu')"
    public)
    .ui.p This is a full window scene (no menu)
    .ui.p You can navigate to main scene with #[a(href="#/") this link].

    
